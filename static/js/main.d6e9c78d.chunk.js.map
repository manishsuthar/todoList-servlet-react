{"version":3,"sources":["component/loader/loader.gif","component/listView/index.js","component/function/function.js","config.js","component/loader/index.js","container/todoList/index.js","container/finishedList/index.js","container/doneList/index.js","container/taskEdit/index.js","container/taskAdd/index.js","component/Main/index.js","component/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ListItems","taskData","react_default","a","createElement","Link","to","concat","task","id","className","priority","ListView","props","data","map","listView_ListItems","key","request","cb","setting","async","crossDomain","url","method","requestType","headers","Content-Type","payload","dataType","success","result","error","$","ajax","config","baseurl","appName","Loader","src","loadersrc","alt","TODO","state","listData","loaded","_this2","this","listType","err","res","setState","JSON","parse","toast","msg","position","POSITION","BOTTOM_RIGHT","component_loader","Fragment","component_listView","lib","autoClose","Component","FINISHED","DONE","BTNComp","mystate","class","_this","name","taskid","href","onClick","ChangeStatus","bind","TaskEdit","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","status","date","_this3","RequestData","match","params","event","setTimeout","window","location","_this$state","rows","value","taskEdit_BTNComp","statusChange","TaskAdd","target","console","log","preventDefault","onSubmit","SubmitValue","required","onChange","setFormValue","disabled","selected","type","Main","Switch","Route","exact","path","component","App","isTab","pathname","isActive","component_Main","Boolean","hostname","ReactDOM","render","BrowserRouter","basename","component_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6e9c78d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.262e3a9f.gif\";","import React from 'react';\r\nimport './index.css';\r\nimport {Link} from 'react-router-dom';\r\nconst ListItems = (taskData)=>{\r\n    return(\r\n        <div>\r\n            <Link to={`/task/${taskData.task.id}`}>\r\n                <div className=\"list-group-item list-group-item-action\">\r\n                    <span><p className=\"listTask\">{taskData.task.task}</p></span>\r\n                    <span className={`badge badge-defindclass \r\n                            ${taskData.task.priority===\"HIGH\"?\"badge-danger\":\r\n                            taskData.task.priority===\"MID\"?\"badge-warning\":\r\n                            taskData.task.priority===\"LOW\"?\"badge-success\":\"\"}`}>\r\n                            {taskData.task.priority}\r\n                    </span>\r\n                </div>\r\n            </Link>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst ListView = (props) =>{\r\n    return(\r\n        <div>\r\n            <div className=\"list-group\">\r\n                {  props.data.map(data=>(\r\n                    <ListItems task={data} key={data.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListView;","import $ from \"jquery\";\r\n\r\nexport function request(data,cb){\r\n   var setting = {\r\n    \"async\": true,\r\n    \"crossDomain\": true,\r\n    \"url\": data.url,\r\n    \"method\": data.requestType,\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    \"data\":data.payload,\r\n    \"dataType\": \"json\",\r\n    \"success\":function(result){\r\n        return cb(null,result);\r\n    },\r\n    \"error\":function(result){\r\n        return cb(result,null);\r\n    }\r\n   }\r\n   $.ajax(setting);\r\n}","const config = {\r\n    \"baseurl\":\"./\",\r\n    \"appName\":\"TodoListApp\"\r\n}\r\n\r\nexport default config;","import React from 'react';\r\nimport './index.css';\r\nimport loadersrc from './loader.gif';\r\nimport config from '../../config';\r\nconst Loader = props =>{\r\n    return(\r\n        <div>\r\n            <img className=\"loader\" src={config.baseurl+loadersrc} alt=\"loader\"/>\r\n        </div>\r\n    );\r\n}\r\nexport default Loader ;","import React,{Component} from 'react';\r\nimport ListView from '../../component/listView';\r\nimport { request } from '../../component/function/function';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Loader from '../../component/loader';\r\nimport config from '../../config';\r\nclass TODO extends Component{\r\n\r\n    state={\r\n        listData:[{'id':1,'task':'Null','priority':'HIGH'}],\r\n        loaded:false\r\n    }\r\n    componentWillMount(){\r\n        var reqData = {\r\n            url:config.baseurl+\"List\",\r\n            requestType:'get',\r\n            payload:{\"listType\":\"TODO\"}\r\n        }\r\n        request(reqData,(err,res)=>{\r\n          if(!res.success){\r\n            toast.error(res.msg, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n          }else{\r\n            this.setState({listData:JSON.parse(res.data)})\r\n            this.setState({loaded:true})\r\n            toast.success(res.msg, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n          }  \r\n        })\r\n    }\r\n    render(){\r\n        const {loaded} = this.state;\r\n        return(\r\n            <div>\r\n                {\r\n                    !loaded && <Loader/>\r\n                }\r\n                {\r\n                    loaded && <React.Fragment><ListView data={this.state.listData} /><ToastContainer autoClose={2000} /></React.Fragment>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TODO;","import React,{Component} from 'react';\r\nimport ListView from '../../component/listView';\r\nimport { request } from '../../component/function/function';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Loader from '../../component/loader';\r\nimport config from '../../config';\r\nclass FINISHED extends Component{\r\n    state={\r\n        listData:[{'id':1,'task':'Null','priority':'HIGH'}],\r\n        loaded:false\r\n    }\r\n    componentWillMount(){\r\n        var reqData = {\r\n            url:config.baseurl+\"List\",\r\n            requestType:'get',\r\n            payload:{\"listType\":\"FINISHED\"}\r\n        }\r\n        request(reqData,(err,res)=>{\r\n          if(!res.success){\r\n            toast.error(res.msg, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n          }else{\r\n            this.setState({listData:JSON.parse(res.data)})\r\n            this.setState({loaded:true})\r\n            toast.success(res.msg, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n          }  \r\n        })\r\n    }\r\n    render(){\r\n        const {loaded} = this.state;\r\n        return(\r\n            <div>\r\n                {\r\n                    !loaded && <Loader/>\r\n                }\r\n                {\r\n                    loaded && <React.Fragment><ListView data={this.state.listData} /><ToastContainer autoClose={2000} /></React.Fragment>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FINISHED;","import React,{Component} from 'react';\r\nimport ListView from '../../component/listView';\r\nimport { request } from '../../component/function/function';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Loader from '../../component/loader';\r\nimport config from '../../config';\r\nclass DONE extends Component{\r\n    state={\r\n        listData:[{'id':1,'task':'Null','priority':'HIGH'}],\r\n        loaded:false\r\n    }\r\n    componentWillMount(){\r\n        var reqData = {\r\n            url:config.baseurl+\"List\",\r\n            requestType:'get',\r\n            payload:{\"listType\":\"DONE\"}\r\n        }\r\n        request(reqData,(err,res)=>{\r\n          if(!res.success){\r\n            toast.error(res.msg, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n          }else{\r\n            this.setState({listData:JSON.parse(res.data)})\r\n            this.setState({loaded:true})\r\n            toast.success(res.msg, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n          }  \r\n        })\r\n    }\r\n    render(){\r\n        const {loaded} = this.state;\r\n        return(\r\n            <div>\r\n                {\r\n                    !loaded && <Loader/>\r\n                }\r\n                {\r\n                    loaded && <React.Fragment><ListView data={this.state.listData} /><ToastContainer autoClose={2000} /></React.Fragment>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DONE;","import React,{Component} from 'react';\r\nimport { request } from '../../component/function/function';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport './index.css';\r\nimport Loader from '../../component/loader';\r\nimport config from '../../config';\r\nclass BTNComp extends Component{\r\n    // constructor(props){\r\n    //     super(props)\r\n        \r\n    // }\r\n    mystate = {\r\n        class:this.props.class,\r\n        name:this.props.name,\r\n        id:this.props.taskid\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"row paddingClass\">\r\n            <a href=\"#/\" onClick={this.props.ChangeStatus.bind(this,this.mystate.name)}>\r\n                <div className={`col-md-12 col-lg-12 col-xs-12 col-sm-12 ${this.mystate.class} customBorder`}>\r\n                    <h3>{this.mystate.name}</h3>\r\n                </div>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// const TODO = () =>{\r\n//     return(\r\n//         <div>\r\n//             <BTNComp class=\"orange\" name=\"DONE\" ChangeStatus={this.statusChange}/>\r\n//             <BTNComp class=\"green\" name=\"FINISHED\" ChangeStatus={this.statusChange}/>\r\n//         </div>\r\n//     );\r\n// }\r\n// const DONE = () =>{\r\n//     return(\r\n//         <div>\r\n//             <BTNComp class=\"orange\" name=\"DONE\" ChangeStatus={this.statusChange}/>\r\n//             <BTNComp class=\"green\" name=\"FINISHED\" ChangeStatus={this.statusChange}/>\r\n//         </div>\r\n//     );\r\n// }\r\n// const FINISHED = () =>{\r\n//     return(\r\n//         <div>\r\n//             <BTNComp class=\"orange\" name=\"DONE\" ChangeStatus={this.statusChange}/>\r\n//             <BTNComp class=\"green\" name=\"FINISHED\" ChangeStatus={this.statusChange}/>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nclass TaskEdit extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n            this.state={\r\n                loaded:false,\r\n                status:'',\r\n                task:'',\r\n                date:'',\r\n                id:''   \r\n            }\r\n        };\r\n    state={\r\n        loaded:false,\r\n        status:'',\r\n        task:'',\r\n        date:'',\r\n        id:''\r\n    }\r\n    RequestData(id){\r\n        var reqObject = {\r\n            url:config.baseurl+'../getTask',\r\n            requestType:'get',\r\n            payload:{id:id}\r\n        }\r\n        request(reqObject,(err,res)=>{\r\n            if(!res.success){\r\n                toast.error(res.msg, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT\r\n                });\r\n            }else if(err){\r\n                toast.error(\"Something is Wrong!!!\", {\r\n                    position: toast.POSITION.BOTTOM_RIGHT\r\n                });\r\n            }else{\r\n                var data = JSON.parse(res.data);\r\n                data = data[0];\r\n                this.setState({status:data.status});\r\n                this.setState({task:data.task});\r\n                this.setState({date:data.date});\r\n                this.setState({id:data.id});\r\n                this.setState({loaded:true});\r\n                // this.setState({date:data.date});\r\n                toast.success(res.msg, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.RequestData(this.props.match.params.id);\r\n    }\r\n    statusChange(key,event){\r\n        var RequestData={\r\n            url:config.baseurl+\"../taskUpdate\",\r\n            requestType:\"get\",\r\n            payload:{id:this.props.taskid,status:key}\r\n        }\r\n        request(RequestData,(err,res)=>{\r\n            if(!res.success){\r\n                toast.error(res.msg, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT\r\n                });\r\n           }else{\r\n                toast.success(res.msg, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT\r\n                });\r\n                setTimeout(() => {\r\n                    window.location = \"../\";\r\n                }, 2000);\r\n           }\r\n        })\r\n    }\r\n\r\n    // updateText(event){\r\n    //     console.log(this.state)\r\n    // }\r\n\r\n    render(){\r\n        const {loaded,status,task,date,id} = this.state;\r\n        return(\r\n            <div>\r\n                <div className=\"col-md-12 col-lg-12 col-xs-12 col-sm-12 p-3\">\r\n                    <div className=\"form-group\">\r\n                        <textarea className=\"form-control textarea\" rows=\"5\" name=\"task\" value={task}></textarea>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className={`col-md-12 col-lg-12 col-xs-12 col-sm-12 alert ${status==='TODO'?'alert-danger':status==='DONE'?'alert-warning':status==='FINISHED'?'alert-success':''}`}>\r\n                        Current Statue <strong>{status}</strong><br/>\r\n                        Date :<strong>{date}</strong><br/>\r\n                        Task ID:<strong>{id}</strong>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n                {/* <div className=\"row paddingClass\">\r\n                    <a href=\"#\" onClick={this.statusChange.bind(this,\"TODO\")}>\r\n                        <div className=\"col-md-12 col-lg-12 col-xs-12 col-sm-12 red customBorder\">\r\n                            <h3>TODO</h3>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div className=\"row paddingClass\">\r\n                    <a href=\"#\" onClick={this.statusChange.bind(this,\"DONE\")}>\r\n                        <div className=\"col-md-12 col-lg-12 col-xs-12 col-sm-12 orange customBorder\">\r\n                            <h3>DONE</h3>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div className=\"row paddingClass\">\r\n                    <a href=\"#\" onClick={this.statusChange.bind(this,\"FINISHED\")}>\r\n                        <div className=\"col-md-12 col-lg-12 col-xs-12 col-sm-12 green customBorder\">\r\n                            <h3>FINISHED</h3>\r\n                        </div>\r\n                    </a>\r\n                </div> */}\r\n                {\r\n                    !loaded && <Loader/>\r\n                }\r\n                {   \r\n                    loaded && status ==='TODO' && <React.Fragment><BTNComp class=\"orange\" name=\"DONE\" taskid={id} ChangeStatus={this.statusChange}/><BTNComp class=\"green\" name=\"FINISHED\" taskid={id} ChangeStatus={this.statusChange}/></React.Fragment>\r\n                }\r\n                {\r\n                    loaded && status ==='DONE' && <React.Fragment><BTNComp class=\"red\" name=\"TODO\" taskid={id} ChangeStatus={this.statusChange}/><BTNComp class=\"green\" name=\"FINISHED\" taskid={id} ChangeStatus={this.statusChange}/></React.Fragment>\r\n                }\r\n                {\r\n                    loaded && status ==='FINISHED' && <React.Fragment><BTNComp class=\"red\" name=\"TODO\" taskid={id} ChangeStatus={this.statusChange}/><BTNComp class=\"orange\" name=\"DONE\" taskid={id} ChangeStatus={this.statusChange}/></React.Fragment>\r\n                }\r\n                {/* <BTNComp class=\"red\" name=\"TODO\" ChangeStatus={this.statusChange}/>\r\n                <BTNComp class=\"orange\" name=\"DONE\" ChangeStatus={this.statusChange}/>\r\n                <BTNComp class=\"green\" name=\"FINISHED\" ChangeStatus={this.statusChange}/> */}\r\n                \r\n                <ToastContainer autoClose={2000} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskEdit;","import React,{Component} from 'react';\r\nimport {request} from '../../component/function/function';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport config from '../../config';\r\nclass TaskAdd extends Component{\r\n    state = {\r\n        task:\"\",\r\n        priority:\"\"\r\n    }\r\n    setFormValue(key,event){\r\n        switch(key){\r\n            case \"task\":\r\n                 this.setState({task:event.target.value})\r\n                // this.formData.task = event.target.value\r\n                 break;\r\n            case \"priority\":\r\n                 this.setState({priority:event.target.value})\r\n                // this.formData.priority = event.target.value\r\n                 break;\r\n            default:\r\n                console.log(\"Default\");\r\n        }\r\n    }\r\n\r\n    SubmitValue(data,event){\r\n        var packAge = {\r\n            url:config.baseurl+'add',\r\n            requestType:\"post\",\r\n            payload:data\r\n        }\r\n        request(packAge,(err,res)=>{\r\n           if(!res.success){\r\n                toast.error(res.msg, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT\r\n                });\r\n           }else{\r\n                toast.success(res.msg, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT\r\n                });\r\n                setTimeout(() => {\r\n                    window.location = \"./\";\r\n                }, 2000);\r\n           }\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n    //    const {task,priority} = this.state;\r\n        return(\r\n            <div>\r\n               \r\n               <div className=\"row\">\r\n               <form onSubmit={this.SubmitValue.bind(this,this.state)}>\r\n                    <div className=\"col-md-12 col-lg-12 col-sm-12 col-xs-12\">\r\n                        <div className=\"form-group\">\r\n                            <textarea required rows=\"5\" name=\"task\" className=\"form-control textarea\" onChange={this.setFormValue.bind(this,\"task\")}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 col-sm-12 col-xs-12\">\r\n                        <div className=\"form-group\">\r\n                            <select required className=\"form-control\" onChange={this.setFormValue.bind(this,\"priority\")} name=\"priority\">\r\n                                <option value=\"\" disabled selected>Select Priority</option>\r\n                                <option value=\"HIGH\">HIGH</option>\r\n                                <option value=\"MID\">MID</option>\r\n                                <option value=\"LOW\">LOW</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 col-sm-12 col-xs-12\">\r\n                        <button type=\"submit\" className=\"btn btn-success btn-lg\">Save</button>\r\n                    </div>\r\n               </form>\r\n                    <ToastContainer autoClose={2000} /> \r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskAdd;","import React from 'react';\r\nimport {Switch,Route} from 'react-router-dom';\r\nimport TODO from '../../container/todoList';\r\nimport FINISHED from '../../container/finishedList';\r\nimport DONE from '../../container/doneList';\r\nimport TaskEdit from '../../container/taskEdit';\r\nimport TaskAdd from '../../container/taskAdd';\r\nimport config from '../../config'\r\n\r\nconst Main = props =>(\r\n   <Switch>\r\n        <Route exact path=\"/\" component={TODO}/>\r\n        <Route path=\"/done\" component={DONE}/>\r\n        <Route path=\"/finished\" component={FINISHED}/>\r\n        <Route path=\"/task/:id\" component={TaskEdit}/>\r\n        <Route path=\"/add/\" component={TaskAdd}/>\r\n   </Switch>\r\n)\r\n\r\nexport default Main;","import 'bootstrap3/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Main from '../Main';\nimport {Link} from 'react-router-dom';\nimport config from '../../config'\nclass App extends Component {\n  state={\n    isTab:''\n  }\n  isActive(){\n    var urlname = window.location.pathname;\n      switch(urlname){\n        case '/':\n            this.setState({isTab:'TODO'})\n            break;\n        case '/done':\n            this.setState({isTab:'DONE'})\n        break;\n        case '/finished':\n            this.setState({isTab:'FINISHED'})\n        break;\n        case '/add':\n            this.setState({isTab:'ADD'})\n        break;\n        default:\n      }\n  }\n  componentDidMount(){\n    this.isActive();\n  }\n  // componentDidUpdate(){\n  //   var pathname = window.location.pathname;\n  //   this.isActive(pathname);\n  // }\n \n  render() {\n    const {isTab} = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>TODO LIST APP</p>\n        </header>\n        <div>\n            <div className=\"container mainDivStyle\">\n               <div className=\"col-md-12 col-xs-12 col-sm-12 col-lg-12 headerHeight\">\n                  <Link to={`/`}>\n                    <div className={`col-md-3 col-sm-3 col-xs-3 col-lg-3 red ${isTab===\"TODO\"?\"Active\":\"\"}`}>\n                        <center><h4>TODO</h4></center>\n                    </div>\n                  </Link>\n                  <Link to={`/done`}>\n                    <div className={`col-md-3 col-sm-3 col-xs-3 col-lg-3 orange ${isTab===\"DONE\"?\"Active\":\"\"}`}>\n                          <center><h4>DONE</h4></center>\n                    </div>\n                  </Link>\n                  <Link to={`/finished`}>\n                    <div className={`col-md-3 col-sm-3 col-xs-3 col-lg-3 green ${isTab===\"FINISHED\"?\"Active\":\"\"}`}>\n                          <center><h4>FINISHED</h4></center> \n                    </div>\n                 </Link>\n                 <Link to={`/add`}>\n                    <div className={`col-md-3 col-sm-3 col-xs-3 col-lg-3 blue ${isTab===\"ADD\"?\"Active\":\"\"}`}>\n                          <center><h4>ADD</h4></center> \n                    </div>\n                 </Link>\n                    \n              </div>\n              <div className=\"row rowMargin\">\n                  <div className=\"col-md-12 col-lg-12 col-xs-12 col-sm-12\">\n                      <Main/>\n                  </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n    <BrowserRouter basename=\"/TodoListApp\">\n        <App />\n    </BrowserRouter>\n     , document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}